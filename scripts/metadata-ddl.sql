CREATE TABLE project (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  CONSTRAINT project_pk PRIMARY KEY (id)
);

CREATE TABLE principal (
  id BIGINT NOT NULL,
  login VARCHAR (50),
  full_name VARCHAR (250),
  password VARCHAR (50),
  CONSTRAINT principal_pk PRIMARY KEY (id)
);

CREATE TABLE template (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  project_id BIGINT,
  CONSTRAINT template_pk PRIMARY KEY (id),
  CONSTRAINT template_project_fk FOREIGN KEY (project_id) REFERENCES project (id)
);

CREATE TABLE role (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  project_id BIGINT,
  CONSTRAINT role_pk PRIMARY KEY (id),
  CONSTRAINT role_project_fk FOREIGN KEY (project_id) REFERENCES project (id)
);

CREATE TABLE attribute (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  template_id BIGINT,
  type VARCHAR (50),
  CONSTRAINT attribute_pk PRIMARY KEY (id),
  CONSTRAINT attribute_template_fk FOREIGN KEY (template_id) REFERENCES template (id)
);

CREATE TABLE link (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  left_template BIGINT,
  TEMPLATE_2_id BIGINT,
  LINK_TYPE_id BIGINT,
  CONSTRAINT link_pk PRIMARY KEY (id),
  CONSTRAINT LINK_TEMPLATE_1_FK FOREIGN KEY (TEMPLATE_1_id) REFERENCES TEMPLATE (id),
  CONSTRAINT LINK_TEMPLATE_2_FK FOREIGN KEY (TEMPLATE_2_id) REFERENCES TEMPLATE (id)
);

CREATE TABLE status (
  id BIGINT NOT NULL,
  code VARCHAR (50),
  name VARCHAR (150),
  description VARCHAR (2000),
  template_id BIGINT,
  initial BOOLEAN,
  CONSTRAINT STATUS_PK PRIMARY KEY (id),
  CONSTRAINT STATUS_TEMPLATE_FK FOREIGN KEY (TEMPLATE_id) REFERENCES TEMPLATE (id)
);

CREATE TABLE TRANSITION (
  id BIGINT NOT NULL,
  SOURCE_STATUS_id BIGINT,
  DESTINATION_STATUS_id BIGINT,
  CONSTRAINT TRANSITION_PK PRIMARY KEY (id),
  CONSTRAINT TRANSITION_STATUS_SRC_FK FOREIGN KEY (SOURCE_STATUS_id) REFERENCES STATUS (id),
  CONSTRAINT TRANSITION_STATUS_DEST_FK FOREIGN KEY (DESTINATION_STATUS_id) REFERENCES STATUS (id)
);

CREATE TABLE TRANSITION_PERMISSIONS (
  TRANSITION_id BIGINT NOT NULL,
  ROLE_id BIGINT NOT NULL,
  CONSTRAINT TRANSITION_PERMISSIONS_PK PRIMARY KEY (TRANSITION_id, ROLE_id),
  CONSTRAINT TRANSITION_PERMISSIONS_TRANSITION_FK FOREIGN KEY (TRANSITION_id) REFERENCES TRANSITION (id),
  CONSTRAINT TRANSITION_PERMISSIONS_ROLE_FK FOREIGN KEY (ROLE_id) REFERENCES ROLE (id),
);

CREATE TABLE PROFILE (
  id BIGINT NOT NULL,
  PRINCIPAL_id BIGINT,
  PROJECT_id BIGINT,
  CONSTRAINT PROFILE_PK PRIMARY KEY (id),
  CONSTRAINT PROFILE_PRINCIPAL_FK FOREIGN KEY (PRINCIPAL_id) REFERENCES PRINCIPAL (id),
  CONSTRAINT PROFILE_PROJECT_FK FOREIGN KEY (PROJECT_id) REFERENCES PROJECT (id)
);

CREATE TABLE PRINCIPAL_ROLES (
  PROFILE_id BIGINT,
  ROLE_id BIGINT,
  CONSTRAINT PRINCIPAL_ROLES_PK PRIMARY KEY (PROFILE_id, ROLE_id),
  CONSTRAINT PRINCIPAL_ROLES_PROFILE_FK FOREIGN KEY (PROFILE_id) REFERENCES PROFILE (id),
  CONSTRAINT PRINCIPAL_ROLES_ROLE_FK FOREIGN KEY (ROLE_id) REFERENCES ROLE (id)
);

CREATE TABLE TEMPLATE_PERMISSIONS (
  TEMPLATE_id BIGINT NOT NULL,
  ROLE_id BIGINT NOT NULL,
  PERMISSION_id BIGINT,
  CONSTRAINT TEMPLATE_PERMISSIONS_PK PRIMARY KEY (TEMPLATE_id, ROLE_id),
  CONSTRAINT TEMPLATE_PERMISSIONS_PROFILE_FK FOREIGN KEY (TEMPLATE_id) REFERENCES TEMPLATE (id),
  CONSTRAINT TEMPLATE_PERMISSIONS_ROLE_FK FOREIGN KEY (ROLE_id) REFERENCES ROLE (id)
);

CREATE TABLE ATTRIBUTE_PERMISSIONS (
  ATTRIBUTE_id BIGINT NOT NULL,
  ROLE_id BIGINT NOT NULL,
  PERMISSION_id BIGINT,
  CONSTRAINT ATTRIBUTE_PERMISSIONS_PK PRIMARY KEY (ATTRIBUTE_id, ROLE_id),
  CONSTRAINT ATTRIBUTE_PERMISSIONS_ATTRIBUTE_FK FOREIGN KEY (ATTRIBUTE_id) REFERENCES ATTRIBUTE (id),
  CONSTRAINT ATTRIBUTE_PERMISSIONS_ROLE_FK FOREIGN KEY (ROLE_id) REFERENCES ROLE (id)
);

CREATE TABLE LINK_PERMISSIONS (
  LINK_id BIGINT NOT NULL,
  ROLE_id BIGINT NOT NULL,
  PERMISSION_id BIGINT,
  CONSTRAINT LINK_PERMISSIONS_PK PRIMARY KEY (LINK_id, ROLE_id),
  CONSTRAINT LINK_PERMISSIONS_FK FOREIGN KEY (LINK_id) REFERENCES LINK (id),
  CONSTRAINT LINK_PERMISSIONS_ROLE_FK FOREIGN KEY (ROLE_id) REFERENCES ROLE (id)
);

CREATE TABLE ATTRIBUTE_GRANTS (
  ATTRIBUTE_id BIGINT NOT NULL,
  STATUS_id BIGINT NOT NULL,
  PERMISSION_id BIGINT,
  CONSTRAINT ATTRIBUTE_GRANTS_PK PRIMARY KEY (ATTRIBUTE_id, STATUS_id),
  CONSTRAINT ATTRIBUTE_GRANTS_ATTRIBUTE_FK FOREIGN KEY (ATTRIBUTE_id) REFERENCES ATTRIBUTE (id),
  CONSTRAINT ATTRIBUTE_GRANTS_STATUS_FK FOREIGN KEY (STATUS_id) REFERENCES STATUS (id)
);

CREATE TABLE LINK_GRANTS (
  LINK_id BIGINT NOT NULL,
  STATUS_id BIGINT NOT NULL,
  PERMISSION_id BIGINT,
  CONSTRAINT LINK_GRANTS_PK PRIMARY KEY (LINK_id, STATUS_id),
  CONSTRAINT LINK_GRANTS_LINK_FK FOREIGN KEY (LINK_id) REFERENCES LINK (id),
  CONSTRAINT LINK_GRANTS_STATUS_FK FOREIGN KEY (STATUS_id) REFERENCES STATUS (id)
);
